
//! Autogenerated weights for `pallet_reward`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-11-13, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `bgallois-ms7d43`, CPU: `12th Gen Intel(R) Core(TM) i3-12100F`
//! EXECUTION: ``, WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: 1024

// Executed Command:
// ./target/release/science-vault
// benchmark
// pallet
// --chain
// dev
// --wasm-execution=compiled
// --pallet
// *
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output=runtime/src/weights/

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_reward`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_reward::WeightInfo for WeightInfo<T> {
	/// Storage: `Reward::Reputations` (r:2 w:1)
	/// Proof: `Reward::Reputations` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	/// Storage: `Reward::MaxRawReputation` (r:1 w:1)
	/// Proof: `Reward::MaxRawReputation` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn reward() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `272`
		//  Estimated: `6132`
		// Minimum execution time: 16_475_000 picoseconds.
		Weight::from_parts(16_816_000, 0)
			.saturating_add(Weight::from_parts(0, 6132))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Reward::Reputations` (r:2 w:1)
	/// Proof: `Reward::Reputations` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	/// Storage: `Reward::MaxRawReputation` (r:1 w:1)
	/// Proof: `Reward::MaxRawReputation` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn punish() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `272`
		//  Estimated: `6132`
		// Minimum execution time: 16_443_000 picoseconds.
		Weight::from_parts(17_011_000, 0)
			.saturating_add(Weight::from_parts(0, 6132))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Reward::Reputations` (r:1 w:1)
	/// Proof: `Reward::Reputations` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	/// Storage: `Reward::MaxRawReputation` (r:1 w:1)
	/// Proof: `Reward::MaxRawReputation` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	fn slash() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `165`
		//  Estimated: `3561`
		// Minimum execution time: 8_011_000 picoseconds.
		Weight::from_parts(8_693_000, 0)
			.saturating_add(Weight::from_parts(0, 3561))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
}
